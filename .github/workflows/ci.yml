name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      splice-api: ${{ steps.filter.outputs.splice-api }}
      splice-api-client: ${{ steps.filter.outputs.splice-api-client }}
      splice-service: ${{ steps.filter.outputs.splice-service }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          splice-api:
            - 'splice-api/**'
          splice-api-client:
            - 'splice-api-client/**'
            - 'splice-api/**'
          splice-service:
            - 'splice-service/**'

  build-and-test-splice-api:
    name: Build and Test splice-api
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.splice-api == 'true' }}

    defaults:
      run:
        working-directory: ./splice-api

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Build package
      run: bun run build

    - name: Verify build artifacts
      run: |
        ls -la dist/
        node -e "console.log('Package built successfully')"

  build-and-test-splice-api-client:
    name: Build and Test splice-api-client
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.splice-api-client == 'true' }}

    defaults:
      run:
        working-directory: ./splice-api-client

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Run linting
      run: bun run lint

    - name: Build package
      run: bun run build

    - name: Run tests with coverage
      run: bun run test:cov

    - name: Verify build artifacts
      run: |
        ls -la dist/
        node -e "console.log('API Client package built successfully')"

  build-and-test-splice-service:
    name: Build and Test splice-service
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.splice-service == 'true' }}

    defaults:
      run:
        working-directory: ./splice-service

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Run linting
      run: bun run lint

    - name: Build
      run: bun run build

    - name: Run tests with coverage
      run: bun run test:cov
      env:
        API_STORE_ENCRYPTION_KEY: test-encryption-key-32-bytes-long

  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: 
      - build-and-test-splice-api
      - build-and-test-splice-api-client
      - build-and-test-splice-service
    if: always()
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.build-and-test-splice-api.result }}" == "failure" || 
                "${{ needs.build-and-test-splice-api-client.result }}" == "failure" || 
                "${{ needs.build-and-test-splice-service.result }}" == "failure" ]]; then
            echo "One or more jobs failed"
            exit 1
          elif [[ "${{ needs.build-and-test-splice-api.result }}" == "skipped" && 
                  "${{ needs.build-and-test-splice-api-client.result }}" == "skipped" && 
                  "${{ needs.build-and-test-splice-service.result }}" == "skipped" ]]; then
            echo "No packages changed, skipping CI"
          else
            echo "All applicable jobs passed"
          fi
